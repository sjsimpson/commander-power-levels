---
import { type ContentEntryMap, getCollection } from "astro:content";
import { cva } from "class-variance-authority";
import Footer from "./Footer.astro";

interface Props {
	pageName: string;
	collectionName: keyof ContentEntryMap;
	nextPage?: { name: string; href: string };
	prevPage?: { name: string; href: string };
	leadText?: string;
}

const { pageName, collectionName, leadText, nextPage, prevPage } = Astro.props;

const collection = await getCollection(collectionName);
const parsedCollection = await Promise.all(
	collection
		.sort((a, b) => a.data.order - b.data.order)
		.map(async (item) => {
			const { Content } = await item.render();
			return { id: item.data.id, name: item.data.name, content: Content };
		}),
);

const proseStyles = cva(["prose prose-quoteless"]);
---

<article class={proseStyles()}>
	<h1 id="page-header">{pageName}</h1>
	{leadText && <p>{leadText}</p>}
	{
		parsedCollection.map((item) => (
			<section id={item.id}>
				<h2>{item.name}</h2>
				<item.content />
			</section>
		))
	}
	<Footer nextPage={nextPage} prevPage={prevPage} />
</article>
